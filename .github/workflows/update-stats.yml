
# name: Update GitHub Stats
# on:
#   schedule:
#     - cron: '0 0 * * *'
#   workflow_dispatch:
#   push:
#     branches: [ main, master ]

# jobs:
#   update-readme:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: 0

#     - name: Generate Snake Game
#       uses: Platane/snk@v3
#       with:
#         github_user_name: ${{ github.repository_owner }}
#         outputs: |
#           dist/github-contribution-grid-snake.svg
#           dist/github-contribution-grid-snake-dark.svg?palette=github-dark

#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '18'

#     - name: Update README with fresh timestamps
#       run: |
#         # Generate new timestamp
#         TIMESTAMP=$(date +%s%3N)
#         echo "Using timestamp: $TIMESTAMP"
        
#         # Update all cache_bust parameters in README
#         sed -i "s/cache_bust=[0-9]\+/cache_bust=$TIMESTAMP/g" README.md
        
#         echo "✅ Updated all GitHub stats URLs with fresh timestamp"

#     - name: Commit and push changes
#       uses: stefanzweifel/git-auto-commit-action@v5
#       with:
#         commit_message: '🔄 Auto-update GitHub stats [skip ci]'
#         commit_user_name: 'github-actions[bot]'
#         commit_user_email: 'github-actions[bot]@users.noreply.github.com'
#         skip_dirty_check: false
#         skip_fetch: false
#         skip_checkout: false

# name: Update GitHub Stats
# on:
#   schedule:
#     - cron: '0 0 * * *'
#   workflow_dispatch:
#   push:
#     branches: [ main, master ]

# jobs:
#   update-readme:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4
#       with:
#         token: ${{ secrets.GH_TOKEN }}
#         fetch-depth: 0

#     - name: Configure Git
#       run: |
#         git config --global user.name "github-actions[bot]"
#         git config --global user.email "github-actions[bot]@users.noreply.github.com"

#     - name: Sync with remote
#       run: |
#         echo "🔄 Syncing with remote repository..."
#         git fetch origin
#         git reset --hard origin/main
#         echo "✅ Successfully synced with remote"

#     - name: Generate Snake Game
#       uses: Platane/snk@v3
#       with:
#         github_user_name: ${{ github.repository_owner }}
#         outputs: |
#           dist/github-contribution-grid-snake.svg
#           dist/github-contribution-grid-snake-dark.svg?palette=github-dark
#         github_token: ${{ secrets.GH_TOKEN }}

#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '18'

#     - name: Update README with fresh timestamps
#       run: |
#         # Generate new timestamp
#         TIMESTAMP=$(date +%s%3N)
#         echo "Using timestamp: $TIMESTAMP"
        
#         # Clear GitHub Stats API cache with multiple requests
#         echo "🔄 Clearing API cache..."
#         for i in {1..5}; do
#           curl -s "https://github-readme-stats.vercel.app/api?username=Entue250&count_private=true&include_all_commits=true&cache_bust=$((TIMESTAMP + i))" > /dev/null &
#         done
#         wait
        
#         # Update all cache_bust parameters in README
#         sed -i "s/cache_bust=[0-9]\+/cache_bust=$TIMESTAMP/g" README.md
        
#         echo "✅ Updated all GitHub stats URLs with fresh timestamp: $TIMESTAMP"

#     - name: Verify Token Access
#       run: |
#         echo "🔍 Testing GitHub API access..."
#         curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
#              -H "Accept: application/vnd.github.v3+json" \
#              -s https://api.github.com/user | jq -r '.login + " - Public repos: " + (.public_repos|tostring)' || echo "Token check completed"

#     - name: Check for changes and commit
#       run: |
#         # Check if there are any changes
#         if git diff --quiet; then
#           echo "No changes detected, skipping commit"
#           exit 0
#         fi
        
#         # Stage changes
#         git add .
        
#         # Check again after staging
#         if git diff --cached --quiet; then
#           echo "No staged changes, skipping commit"
#           exit 0
#         fi
        
#         # Commit changes
#         git commit -m "🔄 Auto-update GitHub stats [skip ci]"
        
#         # Push changes with retry logic
#         for i in {1..3}; do
#           echo "Attempt $i: Pushing changes..."
#           if git push origin main; then
#             echo "✅ Successfully pushed changes"
#             exit 0
#           else
#             echo "❌ Push failed, syncing and retrying..."
#             git fetch origin
#             git rebase origin/main
#             if [ $i -eq 3 ]; then
#               echo "❌ Failed to push after 3 attempts"
#               exit 1
#             fi
#             sleep 5
#           fi
#         done

name: Update GitHub Stats with Private Repo Fix
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_TOKEN }}
        fetch-depth: 0

    - name: Verify GitHub Token Permissions
      run: |
        echo "🔍 Verifying GitHub token permissions..."
        
        # Check user info
        USER_INFO=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
                         -H "Accept: application/vnd.github.v3+json" \
                         https://api.github.com/user)
        
        echo "User: $(echo $USER_INFO | jq -r '.login')"
        echo "Public repos: $(echo $USER_INFO | jq -r '.public_repos')"
        echo "Total private repos: $(echo $USER_INFO | jq -r '.total_private_repos')"
        
        # Check private repo access
        PRIVATE_REPOS=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
                             -H "Accept: application/vnd.github.v3+json" \
                             "https://api.github.com/user/repos?type=private&per_page=5")
        
        if [ "$(echo $PRIVATE_REPOS | jq 'length')" -gt 0 ]; then
          echo "✅ Private repository access confirmed"
          echo "Private repos found: $(echo $PRIVATE_REPOS | jq -r '.[].name' | head -3 | tr '\n' ' ')"
        else
          echo "❌ No private repositories accessible with this token"
        fi

    - name: Generate Snake Game
      uses: Platane/snk@v3
      with:
        github_user_name: ${{ github.repository_owner }}
        outputs: |
          dist/github-contribution-grid-snake.svg
          dist/github-contribution-grid-snake-dark.svg?palette=github-dark
        github_token: ${{ secrets.GH_TOKEN }}

    - name: Update README with Alternative Stats Services
      run: |
        # Generate new timestamp
        TIMESTAMP=$(date +%s%3N)
        echo "Using timestamp: $TIMESTAMP"
        
        # Clear multiple stats API caches
        echo "🔄 Clearing caches for multiple GitHub Stats services..."
        
        # Clear original service cache
        for i in {1..3}; do
          curl -s "https://github-readme-stats.vercel.app/api?username=Entue250&count_private=true&include_all_commits=true&cache_bust=$((TIMESTAMP + i))" > /dev/null &
        done
        
        # Clear alternative service caches
        curl -s "https://github-readme-stats-sigma-five.vercel.app/api?username=Entue250&count_private=true&include_all_commits=true&cache_bust=$TIMESTAMP" > /dev/null &
        curl -s "https://github-readme-stats-git-masterrstaa-rickstaa.vercel.app/api?username=Entue250&count_private=true&include_all_commits=true&cache_bust=$TIMESTAMP" > /dev/null &
        
        wait
        
        # Update README with multiple service options
        cat > update_stats.js << 'EOF'
        const fs = require('fs');
        const timestamp = process.env.TIMESTAMP;
        
        let readme = fs.readFileSync('README.md', 'utf8');
        
        // Update main GitHub Stats with enhanced URL for private repos
        readme = readme.replace(
          /src="https:\/\/github-readme-stats\.vercel\.app\/api\?username=Entue250[^"]*"/g,
          `src="https://github-readme-stats.vercel.app/api?username=Entue250&count_private=true&include_all_commits=true&show_icons=true&theme=radical&hide_border=true&bg_color=161b22&title_color=f75c7e&text_color=c9d1d9&icon_color=58a6ff&ring_color=f75c7e&show_owner=true&cache_bust=${timestamp}"`
        );
        
        // Update Top Languages
        readme = readme.replace(
          /src="https:\/\/github-readme-stats\.vercel\.app\/api\/top-langs\/\?username=Entue250[^"]*"/g,
          `src="https://github-readme-stats.vercel.app/api/top-langs/?username=Entue250&count_private=true&include_all_commits=true&layout=compact&theme=radical&hide_border=true&bg_color=161b22&title_color=f75c7e&text_color=c9d1d9&langs_count=10&cache_bust=${timestamp}"`
        );
        
        // Update other stats services
        readme = readme.replace(/cache_bust=\d+/g, `cache_bust=${timestamp}`);
        
        fs.writeFileSync('README.md', readme);
        console.log('✅ README updated with enhanced private repo parameters');
        console.log('🔢 Expected total commits: 303 (including private repos)');
        console.log('⏰ Current showing: Check stats after 30 minutes');
        EOF
        
        node update_stats.js
      env:
        TIMESTAMP: ${{ env.TIMESTAMP }}

    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if ! git diff --quiet; then
          git add .
          git commit -m "🔄 Enhanced GitHub stats for private repos [skip ci]

          - Updated cache-bust timestamp
          - Enhanced private repository parameters  
          - Expected: 303 total commits including private repos"
          git push
          echo "✅ Successfully updated GitHub profile"
        else
          echo "No changes to commit"
        fi

    - name: Create Status Report
      run: |
        echo "## 📊 Private Repo Stats Update Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Steps Completed:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Verified GitHub token has private repo access" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Cleared caches for multiple stats services" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Updated README with enhanced parameters" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Applied fresh cache-busting timestamp" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 Expected Results:" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Commits:** 303 (including private repos)" >> $GITHUB_STEP_SUMMARY
        echo "- **Current Showing:** Check after 30-60 minutes" >> $GITHUB_STEP_SUMMARY
        echo "- **Private Repos:** Should now be included in count" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ⏱️ Timeline:" >> $GITHUB_STEP_SUMMARY
        echo "- **Immediate:** Cache cleared" >> $GITHUB_STEP_SUMMARY
        echo "- **30 minutes:** Stats may start updating" >> $GITHUB_STEP_SUMMARY
        echo "- **24 hours:** Full synchronization expected" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Last updated:** $(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
